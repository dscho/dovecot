#!/bin/bash
# TODO: Should perhaps be written in perl/python/awk
# FIXME: The runtime is a bit long.

#Array names match category names in data file.
declare -a CR
declare -a LF
declare -a Newline
declare -a Extend
declare -a Regional_Indicator
declare -a Format
declare -a Katakana
declare -a Hebrew_Letter
declare -a ALetter
declare -a Single_Quote
declare -a Double_Quote
declare -a MidNumLet
declare -a MidLetter
declare -a MidNum
declare -a Numeric
declare -a ExtendNumLet

WIDTH=5

add_hexrange () {

    array_name="$1"
    from="$2"
    to="$3"

    eval "$array_name+=($(seq -s ' ' "0x$from" "0x$to"))"
}

print_c_array () {

    array_name="$1"
    eval "array=("\${$array_name[@]}")"
    array_length=${#array[@]}
    i=1

    printf "static const uint32_t %s[]= {\n\t" "$array_name"

    for val in "${array[@]}" ; do
        printf "0x%0${WIDTH}X" "$val"
        if [  $i -lt $array_length ]; then
            echo -n ", "
            if [ $(($i%8)) -eq 0 ]; then
                echo -ne "\n\t"
            fi
            i=$((i+1))
        else
            break
        fi
    done

   echo -ne "\n};\n"
}
#read everything except comments.
while read -s -a line; do
    [ -z "${line[0]}" ] && continue #ignore empty lines

     case "${line[0]}" in \#*) continue ;; esac #ignore comments

    value="${line[0]}"
    category="${line[2]}"

    case "$value" in
        *..*)
            start=`echo "$value" | cut -d . -f 1`
            end=`echo "$value" | cut -d . -f 3`
            add_hexrange "$category" "$start" "$end"
            ;;
        *)
            value=`printf "%05X" $((16#$value))`
            eval "$category+=(0x\$value)"
            ;;
        esac;

done

printf "/* This file is automatically generated by %s from WordBreakProperty.txt */\n" "$0"

print_c_array CR
print_c_array LF
print_c_array Newline
print_c_array Extend
print_c_array Regional_Indicator
print_c_array Format
print_c_array Katakana
print_c_array Hebrew_Letter
print_c_array ALetter
print_c_array Single_Quote
print_c_array Double_Quote
print_c_array MidNumLet
print_c_array MidLetter
print_c_array MidNum
print_c_array Numeric
print_c_array ExtendNumLet

