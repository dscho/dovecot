#!/bin/bash

#Array names match category names in data file.
array_names="White_Space Dash Terminal_Punctuation STerm Pattern_White_Space"
declare -a White_Space
declare -a Dash
declare -a Terminal_Punctuation
declare -a STerm
declare -a Pattern_White_Space
#TODO include Pattern_Syntax?

WIDTH=5

add_hexrange () {

    array_name="$1"
    from="$2"
    to="$3"

    eval "$array_name+=($(seq -s ' ' "0x$from" "0x$to"))"
}

print_c_array () {

    array_name="$1"
    eval "array=("\${$array_name[@]}")"
    array_length=${#array[@]}
    i=1

    printf "static const uint32_t %s[]= {\n\t" "$array_name"

    for val in "${array[@]}" ; do
        printf "0x%0${WIDTH}X" "$val"
        if [  $i -lt $array_length ]; then
            echo -n ", "
            if [ $(($i%8)) -eq 0 ]; then
                echo -ne "\n\t"
            fi
            i=$((i+1))
        else
            break
        fi
    done

   echo -ne "\n};\n"
}
#read everything except comments.
while read -s -a line; do
    [ -z "${line[0]}" ] && continue #ignore empty lines

     case "${line[0]}" in \#*) continue ;; esac #ignore comments

    value="${line[0]}"
    category="${line[2]}"

   case "$array_names" in
       *"$category"*)
           case "$value" in
               *..*)
                   start=`echo "$value" | cut -d . -f 1`
                   end=`echo "$value" | cut -d . -f 3`
                   add_hexrange "$category" "$start" "$end"
                   ;;
               *)
                   value=`printf "%05X" $((16#$value))`
                   eval "$category+=(0x\$value)"
                   ;;
           esac
           ;;
   esac
done
printf "/* This file is automatically generated by %s from PropList.txt */\n" "$0"

for name in $array_names; do
    print_c_array "$name"
done

